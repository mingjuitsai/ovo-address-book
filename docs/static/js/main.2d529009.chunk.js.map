{"version":3,"sources":["assets/management.svg","data/empolyees.js","components/EmployeeTable.js","components/Manage.js","components/Search.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","EMPLOYEES","EmployeeRow","props","employees","map","employee","index","key","firstName","lastName","phone","department","hidden","canRemove","onClick","e","onRowRemove","EmployeeTable","state","initialEmployees","computedEmpolyees","onRemoveEmployee","bind","searchFilterEmployees","sortEmployeesByFirstName","sortEmployeesByLastName","sortEmployeesByDepartment","this","setState","event","result","slice","splice","empolyees","search","searchBy","keys","options","threshold","Fuse","sort","former","latter","departmentFormer","toLowerCase","departmentLatter","nameFormer","nameLatter","searchFilteredEmployees","className","React","Component","Manage","onNewEmployeeInput","onNewEmployeeSubmit","newEmpolyee","newEmpolyeeForm","createRef","preventDefault","current","checkValidity","unshift","length","target","name","value","ref","htmlFor","onChange","type","id","required","disabled","Search","onSearchInput","onSearchByInput","App","src","logo","alt","to","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2d529009.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/management.1427b09d.svg\";","let EMPLOYEES = [{\n  \"firstName\": \"Meris\",\n  \"lastName\": \"Ivanchikov\",\n  \"phone\": \"126-524-5425\",\n  \"department\": \"Garden\"\n}, {\n  \"firstName\": \"Lamond\",\n  \"lastName\": \"Kubanek\",\n  \"phone\": \"932-759-3777\",\n  \"department\": \"Electronics\"\n}, {\n  \"firstName\": \"Darcee\",\n  \"lastName\": \"de Quesne\",\n  \"phone\": \"373-589-2153\",\n  \"department\": \"Outdoors\"\n}, {\n  \"firstName\": \"Crichton\",\n  \"lastName\": \"Rowet\",\n  \"phone\": \"843-827-1001\",\n  \"department\": \"Outdoors\"\n}, {\n  \"firstName\": \"Renae\",\n  \"lastName\": \"Adnams\",\n  \"phone\": \"726-292-4384\",\n  \"department\": \"Garden\"\n}, {\n  \"firstName\": \"Gabi\",\n  \"lastName\": \"Matley\",\n  \"phone\": \"461-488-8118\",\n  \"department\": \"Outdoors\"\n}, {\n  \"firstName\": \"Fredrika\",\n  \"lastName\": \"McBayne\",\n  \"phone\": \"749-830-8102\",\n  \"department\": \"Grocery\"\n}, {\n  \"firstName\": \"Atlante\",\n  \"lastName\": \"Dawbery\",\n  \"phone\": \"765-773-9356\",\n  \"department\": \"Beauty\"\n}, {\n  \"firstName\": \"Ninette\",\n  \"lastName\": \"Child\",\n  \"phone\": \"784-845-7712\",\n  \"department\": \"Garden\"\n}, {\n  \"firstName\": \"Pauly\",\n  \"lastName\": \"Pluthero\",\n  \"phone\": \"234-646-7175\",\n  \"department\": \"Automotive\"\n}, {\n  \"firstName\": \"Merv\",\n  \"lastName\": \"Pudner\",\n  \"phone\": \"978-490-1427\",\n  \"department\": \"Automotive\"\n}, {\n  \"firstName\": \"Octavius\",\n  \"lastName\": \"Gatrill\",\n  \"phone\": \"339-733-3083\",\n  \"department\": \"Electronics\"\n}, {\n  \"firstName\": \"Jamal\",\n  \"lastName\": \"Crosi\",\n  \"phone\": \"398-406-4241\",\n  \"department\": \"Books\"\n}, {\n  \"firstName\": \"Ced\",\n  \"lastName\": \"Dibbe\",\n  \"phone\": \"170-361-4487\",\n  \"department\": \"Beauty\"\n}, {\n  \"firstName\": \"Brit\",\n  \"lastName\": \"Dye\",\n  \"phone\": \"789-132-4127\",\n  \"department\": \"Toys\"\n}];\n\n\nexport default EMPLOYEES;","import React from 'react';\nimport Fuse from 'fuse.js';\n\n\nfunction EmployeeRow(props) {\n  const employees = props.employees;\n  const rowItems = employees.map((employee, index) =>\n    <tr key={index}>\n      <td>{employee.firstName}</td>\n      <td>{employee.lastName}</td>\n      <td>{employee.phone}</td>\n      <td>{employee.department}</td>\n      <td hidden={!props.canRemove}>\n        <button onClick={(e) => props.onRowRemove(index, e)}>Remove</button>\n      </td>\n    </tr>\n  );\n  return (\n    rowItems\n  );\n}\n\nexport default class EmployeeTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialEmployees: [],\n      computedEmpolyees: []\n    };\n    this.onRemoveEmployee = this.onRemoveEmployee.bind(this);\n    this.searchFilterEmployees = this.searchFilterEmployees.bind(this);\n    this.sortEmployeesByFirstName = this.sortEmployeesByFirstName.bind(this);\n    this.sortEmployeesByLastName = this.sortEmployeesByLastName.bind(this);\n    this.sortEmployeesByDepartment = this.sortEmployeesByDepartment.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      initialEmployees: this.props.employees,\n      computedEmpolyees: this.props.employees\n    });\n  }\n\n  componentDidUpdate() {\n    // this.onSearchEmployees(this.props.search, this.props.searchBy);\n  }\n\n  onRemoveEmployee(index, event) {\n    let result = this.state.computedEmpolyees.slice();\n    result.splice(index, 1);\n    this.props.onRemoveEmployee(result);\n    this.setState({\n      computedEmpolyees: result\n    });\n  }\n\n  searchFilterEmployees(empolyees, search, searchBy) {    \n    let keys;\n    if(!searchBy || !search) return empolyees;\n\n    if(searchBy === 'name') {\n      keys = ['firstName', 'lastName'];\n    }\n    if(searchBy === 'department') {\n      keys = ['department'];\n    }\n    let options = {\n      keys,\n      threshold: 0.5,\n    }\n    let fuse = new Fuse(empolyees, options);\n    let result = fuse.search(search);\n    return result;\n  }\n\n  sortEmployeesByDepartment() {\n    let result = this.state.computedEmpolyees.sort((former, latter) => {\n      let departmentFormer = former.department.toLowerCase();\n      let departmentLatter = latter.department.toLowerCase();\n      if(departmentFormer < departmentLatter) {\n        return -1;\n      }\n      if(departmentFormer > departmentLatter) {\n        return 1;\n      }\n      return 0;\n    });\n    this.setState({\n      computedEmpolyees: result\n    });\n  }\n\n  sortEmployeesByLastName() {\n    let result = this.state.computedEmpolyees.sort((former, latter) => {\n      let nameFormer = former.lastName.toLowerCase();\n      let nameLatter = latter.lastName.toLowerCase();\n      if(nameFormer < nameLatter) {\n        return -1;\n      }\n      if(nameFormer > nameLatter) {\n        return 1;\n      }\n      return 0;\n    });\n    this.setState({\n      computedEmpolyees: result\n    });\n  }\n\n  sortEmployeesByFirstName() {\n    let result = this.state.computedEmpolyees.sort((former, latter) => {\n      let nameFormer = former.firstName.toLowerCase();\n      let nameLatter = latter.firstName.toLowerCase();\n      if(nameFormer < nameLatter) {\n        return -1;\n      }\n      if(nameFormer > nameLatter) {\n        return 1;\n      }\n      return 0;\n    });\n    this.setState({\n      computedEmpolyees: result\n    });\n  }\n\n  render() {\n    let computedEmpolyees = this.state.computedEmpolyees;\n    let search = this.props.search;\n    let searchBy = this.props.searchBy;\n    const searchFilteredEmployees = this.searchFilterEmployees(computedEmpolyees, search, searchBy);\n\n    return (\n      <table className=\"EmployeeTable\">\n        <thead>\n          <tr>\n            <th className=\"canSort\" onClick={this.sortEmployeesByFirstName}>\n              First Name\n            </th>\n            <th className=\"canSort\" onClick={this.sortEmployeesByLastName}>\n              Last Name\n            </th>\n            <th>\n              Phone\n            </th>\n            <th className=\"canSort\" onClick={this.sortEmployeesByDepartment}>\n              Department\n            </th>\n            <th>\n              Action\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <EmployeeRow employees={searchFilteredEmployees} canRemove={this.props.canRemove} onRowRemove={this.onRemoveEmployee} />\n        </tbody>\n      </table>\n    )\n  }\n}\n","import React from 'react';\nimport EMPLOYEES from './../data/empolyees';\nimport EmployeeTable from './EmployeeTable';\n\n\nexport default class Manage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onRemoveEmployee = this.onRemoveEmployee.bind(this);\n    this.onNewEmployeeInput = this.onNewEmployeeInput.bind(this);\n    this.onNewEmployeeSubmit = this.onNewEmployeeSubmit.bind(this);\n    this.state = {\n      newEmpolyee: {\n        firstName: '',\n        lastName: '',\n        department: '',\n        phone: ''\n      }\n    };\n    this.newEmpolyeeForm = React.createRef();\n  }\n\n  onNewEmployeeSubmit(event) {\n    event.preventDefault();\n    const isFormValid = this.newEmpolyeeForm.current.checkValidity();\n\n    if(isFormValid) {\n      EMPLOYEES.unshift({...this.state.newEmpolyee});\n      // Refresh\n      this.setState({\n        newEmpolyee: {\n          firstName: '',\n          lastName: '',\n          department: '',\n          phone: ''\n        }\n      });\n    }\n  }\n\n  onRemoveEmployee(result) {\n    EMPLOYEES.splice(0, EMPLOYEES.length, ...result);\n  }\n\n  onNewEmployeeInput(event) {\n    this.setState({\n      newEmpolyee: { ...this.state.newEmpolyee, [event.target.name]: event.target.value }\n    });\n  }\n\n  render() {\n    const newEmpolyee = this.state.newEmpolyee;\n\n    return (\n      <div className=\"Manage\">\n        <header className=\"Manage-header\">\n          <h1 className=\"Manage-title\">Add New Empolyee</h1>\n        </header>\n        <div className=\"Manage-form\">\n          <form ref={this.newEmpolyeeForm}>\n            <div className=\"inputRow\">\n              <div className=\"inputCell\">\n                <label  htmlFor=\"firstName\">First Name</label>\n                <input value={newEmpolyee.firstName} onChange={this.onNewEmployeeInput} type=\"text\" id=\"firstName\" name=\"firstName\" required />\n              </div>\n              <div className=\"inputCell\">\n                <label htmlFor=\"lastName\">Last Name</label>\n                <input value={newEmpolyee.lastName} onChange={this.onNewEmployeeInput} type=\"text\" id=\"lastName\" name=\"lastName\" required/>\n              </div>\n              <div className=\"inputCell\">\n                <label htmlFor=\"phone\">Phone</label>\n                <input value={newEmpolyee.phone} onChange={this.onNewEmployeeInput} type=\"text\" id=\"phone\" name=\"phone\" required/>\n              </div>\n              <div className=\"inputCell\">\n                <label htmlFor=\"department\">Department</label>\n                <select onChange={this.onNewEmployeeInput} name=\"department\" value={newEmpolyee.department} required>\n                  <option value=\"\" disabled>Select department</option>\n                  <option value=\"Garden\">Garden</option>\n                  <option value=\"Electronics\">Electronics</option>\n                  <option value=\"Outdoors\">Outdoors</option>\n                  <option value=\"Grocery\">Grocery</option>\n                  <option value=\"Beauty\">Beauty</option>\n                  <option value=\"Automotive\">Automotive</option>\n                  <option value=\"Books\">Books</option>\n                  <option value=\"Toys\">Toys</option>\n                </select>\n              </div>\n              <div className=\"inputCell\">\n                <button type=\"submit\" onClick={this.onNewEmployeeSubmit}>Submit</button>\n              </div>\n            </div>\n          </form>\n        </div>\n\n        <EmployeeTable employees={EMPLOYEES} onRemoveEmployee={this.onRemoveEmployee} canRemove={true} />\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport EmployeeTable from './EmployeeTable';\nimport EMPLOYEES from './../data/empolyees';\n\n\nexport default class Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: \"\",\n      searchBy: \"name\"\n    };\n    this.onSearchInput = this.onSearchInput.bind(this);\n    this.onSearchByInput = this.onSearchByInput.bind(this);\n  }\n\n  onSearchInput(event) {\n    this.setState({\n      search: event.target.value\n    });\n  }\n\n  onSearchByInput(event) {\n    this.setState({\n      searchBy: event.target.value\n    })\n  }\n\n\n  render() {\n    return (\n      <div className=\"Search\">\n        <header className=\"Search-header\">\n          <h1 className=\"Search-title\">Search</h1>\n        </header>\n        <div className=\"Search-form\">\n          <form>\n            <div className=\"inputRow\">\n              <div className=\"inputCell\">\n                <label htmlFor=\"searchBy\">Search by:</label>\n                <select onChange={this.onSearchByInput} name=\"searchBy\" value={this.state.searchBy} required>\n                  <option value=\"name\">Name</option>\n                  <option value=\"department\">Department</option>\n                </select>\n              </div>\n              <div className=\"inputCell Search-input\">\n                <label htmlFor=\"search\">Search:</label>\n                <input value={this.state.search} onChange={this.onSearchInput} type=\"text\" id=\"search\" name=\"search\" required />\n              </div>\n            </div>\n          </form>\n        </div>\n\n        <EmployeeTable employees={EMPLOYEES} search={this.state.search} searchBy={this.state.searchBy} canRemove={false} />\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport logo from '../assets/management.svg';\nimport {\n  Switch,\n  Route,\n  NavLink,\n  Redirect\n} from \"react-router-dom\";\nimport Manage from './Manage';\nimport Search from './Search';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1 className=\"App-heading\">\n          Retail Management\n        </h1>\n\n        <nav className=\"App-nav\">\n          <ul>\n            <li>\n              <NavLink to=\"/manage\">&#x262F; Manage</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/search\">&#x26B2; Search</NavLink>\n            </li>\n          </ul>\n        </nav>\n      </header>\n      <main className=\"App-main\">\n        <Switch>\n            <Route exact path=\"/\">\n              <Redirect to=\"/manage\" />\n            </Route>\n            <Route exact path=\"/manage\" component={Manage} />\n            <Route exact path=\"/search\" component={Search} />\n        </Switch>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './styles/index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<BrowserRouter>\n    <App />\n  </BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}